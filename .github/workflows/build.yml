name: Build and publish
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare tag name
        id: prep
        run: |
          TAG_NAME=${GITHUB_REF_NAME#v}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "::set-output name=tag_name::${TAG_NAME}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/estaid-app/{{ env.GITHUB_REPOSITORY }}
          labels: |
            io.artifacthub.package.category=database
            io.artifacthub.package.keywords=postgresql,postgres,pgbouncer
            io.artifacthub.package.license=MIT
            io.artifacthub.package.maintainers=[{"name":"KB","email":"kb@estaid.dk"}]
            io.artifacthub.package.readme-url=https://github.com/estaid-app/${{ env.GITHUB_REPOSITORY }}/blob/main/README.md
          tags: |
            type=raw,value=${{ steps.prep.outputs.tag_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          build-args: TAG=${{ steps.prep.outputs.tag_name }}